#!/bin/bash

# source the standard bash setup script
if [ -f ~/.bashrc ]; then
    . ~/.bashrc
fi

echo
echo "********************************************************************************"
echo "*                                                                              *"
echo "*                      Rapid Vulkan Development Console                        *"
echo "*                                                                              *"
echo "********************************************************************************"
echo

export RAPID_VULKAN_ROOT="$(cd $(dirname "${BASH_SOURCE[0]}")/../..;pwd)"

echo $(uname -r) | grep -q "microsoft" || true
if [[ $? == 0 ]] ; then
    # kernel name contains string "microsoft". we must be in wsl environment.
    echo "NOTE: You are currently running WSL environment. Please refer to the following"
    echo "      link to ensure your docker environemnt is running properly:"
    echo
    echo "      https://docs.docker.com/docker-for-windows/wsl/"
    echo

    # remove /mnt/... like path imported via WSL interoperbility to avoid confusing linux tools, except docker related path
    # TODO: retain docker path in original PATH instead of appending with hardcoded one
    export PATH=`echo $PATH | tr ":" "\n" | grep -v "/mnt/" | tr "\n" ":"`:/mnt/c/Program\ Files/Docker/Docker/resources/bin:/mnt/c/ProgramData/DockerDesktop/version-bin
fi

# check required apt/dpkg packages
function __check_package() {
    printf "Check package $1 .... "
    if dpkg -s $1 2>/dev/null 1>/dev/null; then
        printf "OK\n"
    else
        printf "Missing. Please run 'dev/env/bootstrap.sh' to install required packages\n"
    fi
}
__check_package git-lfs
__check_package vulkan-sdk

# update PATH
export PATH=${PATH}:${RAPID_VULKAN_ROOT}/dev/bin
if [[ ! -z ${ANDROID_SDK_ROOT} ]]; then
    export PATH=${PATH}:${ANDROID_SDK_ROOT}/platform-tools
fi

# setup bash autocomplete for common andoid commands: adb, fastboot and etc.
if [ -f ${RAPID_VULKAN_ROOT}/dev/env/adb-autocomplete.sh ]; then
    . ${RAPID_VULKAN_ROOT}/dev/env/adb-autocomplete.sh
fi

# setup local git config (prefix with double underscore indicating it is private to this script)
__setup-local-git-config()
{
    if [ -d $1/.git ] || [ -f $1/.git ]; then
        cd $1
        git config --local include.path ${RAPID_VULKAN_ROOT}/.gitconfig
        cd ->/dev/null
    fi
}
__setup-local-git-config ${RAPID_VULKAN_ROOT}

# setup alias
dir="$(cd $(dirname "${BASH_SOURCE[0]}");pwd)"
if [ -f ${dir}/alias.bash.txt ]; then
    . ${dir}/alias.bash.txt
fi

# utility function to get git branch
get-git-branch() {
    branch=$(git rev-parse --abbrev-ref HEAD 2>&1)
    if [[ $? != 0 ]]  ; then
        branch="n/a"
    fi
    echo $branch
}

# setup command line prompt
PS1="\n\e[00;92m==== [rapid-vulkan] - \e[01;96m${RAPID_VULKAN_ROOT}\e[00;92m - \e[01;93m\$(get-git-branch)\e[00;92m ====\e[m\n$PS1"

# done
echo
echo "USERNAME          = $(whoami)"
echo "RAPID_VULKAN_ROOT = ${RAPID_VULKAN_ROOT} "
echo "JAVA_HOME         = ${JAVA_HOME} (required to run Android build from command line)"
echo "ANDROID_SDK_ROOT  = ${ANDROID_SDK_ROOT} (required to run Android build from command line)"
echo
echo "Happy coding!"
